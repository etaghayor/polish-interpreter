Taghayor, Fatemeh, @taghayor, 22015541
Bacha,    Rayane,  @bacha,    22018752

Le projet a été divisé en trois parties :

    - Reader.ml lis le fichier Polish ligne par ligne et transforme celui-ci en un bloc d'instructions.
    - Printer.ml reécrit une syntaxe polish concrète à partir d'un bloc d'instructions.
    - Evaluator.ml évalue un bloc d'instructions et renvoie les résultats trouvés.

Dans les trois parties, les opérations, expressions, comparateurs, conditions, instructions, 
et blocs sont gérés dans des fonctions différentes.

La compilation se fait à l'aide de la commande "make" à la racine du dépot, et l'execution 
est de la forme "./run -eval $path/fichier_polish.p" pour l'evaluation du fichier polish 
ou "./run -reprint $path/fichier_polish.p" pour la reécriture.

A noter que les fonctions marchent aussi sans passer par la lecture d'un fichier.p, par exemple :
read_op Add créera un "type op" Add;
print_expr Op(Add, Num 1, Num 3) donnera "+ 1 3";
eval_expr Op(Add, Num 1, Num 3) donnera 4.

Le reader et l'evaluator on été fait par Taghayor Fatemeh;
Le printer a été fait par Bacha Rayane.

Quand à l'évolution au cours du temps, le reader a pris le plus de temps, et les reader et evaluator 
ont suivi assez vite.

Bonne lecture !